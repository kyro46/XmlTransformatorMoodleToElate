//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.08.28 at 10:41:44 AM MESZ 
//


package de.thorstenberger.taskmodel.complex.complextaskdef;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded">
 *         &lt;element name="mcTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;element name="mc-config">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;choice>
 *                             &lt;element name="regular">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;element name="negativePoints">
 *                                         &lt;simpleType>
 *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                             &lt;minInclusive value="0"/>
 *                                           &lt;/restriction>
 *                                         &lt;/simpleType>
 *                                       &lt;/element>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;element name="different">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;sequence>
 *                                       &lt;element name="correctAnswerNegativePoints">
 *                                         &lt;simpleType>
 *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                             &lt;minInclusive value="0"/>
 *                                           &lt;/restriction>
 *                                         &lt;/simpleType>
 *                                       &lt;/element>
 *                                       &lt;element name="incorrectAnswerNegativePoints">
 *                                         &lt;simpleType>
 *                                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                             &lt;minInclusive value="0"/>
 *                                           &lt;/restriction>
 *                                         &lt;/simpleType>
 *                                       &lt;/element>
 *                                     &lt;/sequence>
 *                                   &lt;/restriction>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                           &lt;/choice>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="clozeTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;element name="cloze-config">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="negativePoints" use="required">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                           &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="textTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="mappingTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;element name="mapping-config">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="negativePoints" use="required">
 *                             &lt;simpleType>
 *                               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
 *                                 &lt;minInclusive value="0"/>
 *                               &lt;/restriction>
 *                             &lt;/simpleType>
 *                           &lt;/attribute>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="paintTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="addonTaskBlock">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
 *                 &lt;sequence>
 *                   &lt;choice maxOccurs="unbounded">
 *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
 *                     &lt;element name="choice">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}category" maxOccurs="unbounded"/>
 *       &lt;/choice>
 *       &lt;attribute name="title" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="ignoreOrderOfBlocks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="mixAllSubTasks" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="tasksPerPage">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *             &lt;minInclusive value="0"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "mcTaskBlockOrClozeTaskBlockOrTextTaskBlock"
})
@XmlRootElement(name = "category")
public class Category {

    @XmlElements({
        @XmlElement(name = "addonTaskBlock", type = Category.AddonTaskBlock.class),
        @XmlElement(name = "category", type = Category.class),
        @XmlElement(name = "mcTaskBlock", type = Category.McTaskBlock.class),
        @XmlElement(name = "textTaskBlock", type = Category.TextTaskBlock.class),
        @XmlElement(name = "paintTaskBlock", type = Category.PaintTaskBlock.class),
        @XmlElement(name = "clozeTaskBlock", type = Category.ClozeTaskBlock.class),
        @XmlElement(name = "mappingTaskBlock", type = Category.MappingTaskBlock.class)
    })
    protected List<Object> mcTaskBlockOrClozeTaskBlockOrTextTaskBlock;
    @XmlAttribute(required = true)
    protected String title;
    @XmlAttribute
    protected Boolean ignoreOrderOfBlocks;
    @XmlAttribute(required = true)
    protected String id;
    @XmlAttribute
    protected Boolean mixAllSubTasks;
    @XmlAttribute
    protected Integer tasksPerPage;

    /**
     * Gets the value of the mcTaskBlockOrClozeTaskBlockOrTextTaskBlock property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mcTaskBlockOrClozeTaskBlockOrTextTaskBlock property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMcTaskBlockOrClozeTaskBlockOrTextTaskBlock().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Category.AddonTaskBlock }
     * {@link Category }
     * {@link Category.McTaskBlock }
     * {@link Category.TextTaskBlock }
     * {@link Category.PaintTaskBlock }
     * {@link Category.ClozeTaskBlock }
     * {@link Category.MappingTaskBlock }
     * 
     * 
     */
    public List<Object> getMcTaskBlockOrClozeTaskBlockOrTextTaskBlock() {
        if (mcTaskBlockOrClozeTaskBlockOrTextTaskBlock == null) {
            mcTaskBlockOrClozeTaskBlockOrTextTaskBlock = new ArrayList<Object>();
        }
        return this.mcTaskBlockOrClozeTaskBlockOrTextTaskBlock;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the ignoreOrderOfBlocks property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIgnoreOrderOfBlocks() {
        return ignoreOrderOfBlocks;
    }

    /**
     * Sets the value of the ignoreOrderOfBlocks property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIgnoreOrderOfBlocks(Boolean value) {
        this.ignoreOrderOfBlocks = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the mixAllSubTasks property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isMixAllSubTasks() {
        return mixAllSubTasks;
    }

    /**
     * Sets the value of the mixAllSubTasks property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setMixAllSubTasks(Boolean value) {
        this.mixAllSubTasks = value;
    }

    /**
     * Gets the value of the tasksPerPage property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTasksPerPage() {
        return tasksPerPage;
    }

    /**
     * Sets the value of the tasksPerPage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTasksPerPage(Integer value) {
        this.tasksPerPage = value;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "addonSubTaskDefOrChoice"
    })
    public static class AddonTaskBlock
        extends TaskBlockType
    {

        @XmlElements({
            @XmlElement(name = "choice", type = Category.AddonTaskBlock.Choice.class),
            @XmlElement(name = "addonSubTaskDef", type = AddonSubTaskDef.class)
        })
        protected List<Object> addonSubTaskDefOrChoice;

        /**
         * Gets the value of the addonSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the addonSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAddonSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Category.AddonTaskBlock.Choice }
         * {@link AddonSubTaskDef }
         * 
         * 
         */
        public List<Object> getAddonSubTaskDefOrChoice() {
            if (addonSubTaskDefOrChoice == null) {
                addonSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.addonSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}addonSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "addonSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<AddonSubTaskDef> addonSubTaskDef;

            /**
             * Gets the value of the addonSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the addonSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAddonSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link AddonSubTaskDef }
             * 
             * 
             */
            public List<AddonSubTaskDef> getAddonSubTaskDef() {
                if (addonSubTaskDef == null) {
                    addonSubTaskDef = new ArrayList<AddonSubTaskDef>();
                }
                return this.addonSubTaskDef;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;element name="cloze-config">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="negativePoints" use="required">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *                 &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "clozeConfig",
        "clozeSubTaskDefOrChoice"
    })
    public static class ClozeTaskBlock
        extends TaskBlockType
    {

        @XmlElement(name = "cloze-config", required = true)
        protected Category.ClozeTaskBlock.ClozeConfig clozeConfig;
        @XmlElements({
            @XmlElement(name = "clozeSubTaskDef", type = ClozeSubTaskDef.class),
            @XmlElement(name = "choice", type = Category.ClozeTaskBlock.Choice.class)
        })
        protected List<Object> clozeSubTaskDefOrChoice;

        /**
         * Gets the value of the clozeConfig property.
         * 
         * @return
         *     possible object is
         *     {@link Category.ClozeTaskBlock.ClozeConfig }
         *     
         */
        public Category.ClozeTaskBlock.ClozeConfig getClozeConfig() {
            return clozeConfig;
        }

        /**
         * Sets the value of the clozeConfig property.
         * 
         * @param value
         *     allowed object is
         *     {@link Category.ClozeTaskBlock.ClozeConfig }
         *     
         */
        public void setClozeConfig(Category.ClozeTaskBlock.ClozeConfig value) {
            this.clozeConfig = value;
        }

        /**
         * Gets the value of the clozeSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the clozeSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getClozeSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ClozeSubTaskDef }
         * {@link Category.ClozeTaskBlock.Choice }
         * 
         * 
         */
        public List<Object> getClozeSubTaskDefOrChoice() {
            if (clozeSubTaskDefOrChoice == null) {
                clozeSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.clozeSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}clozeSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "clozeSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<ClozeSubTaskDef> clozeSubTaskDef;

            /**
             * Gets the value of the clozeSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the clozeSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getClozeSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link ClozeSubTaskDef }
             * 
             * 
             */
            public List<ClozeSubTaskDef> getClozeSubTaskDef() {
                if (clozeSubTaskDef == null) {
                    clozeSubTaskDef = new ArrayList<ClozeSubTaskDef>();
                }
                return this.clozeSubTaskDef;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="negativePoints" use="required">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *       &lt;attribute name="ignoreCase" type="{http://www.w3.org/2001/XMLSchema}boolean" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class ClozeConfig {

            @XmlAttribute(required = true)
            protected float negativePoints;
            @XmlAttribute
            protected Boolean ignoreCase;

            /**
             * Gets the value of the negativePoints property.
             * 
             */
            public float getNegativePoints() {
                return negativePoints;
            }

            /**
             * Sets the value of the negativePoints property.
             * 
             */
            public void setNegativePoints(float value) {
                this.negativePoints = value;
            }

            /**
             * Gets the value of the ignoreCase property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isIgnoreCase() {
                return ignoreCase;
            }

            /**
             * Sets the value of the ignoreCase property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setIgnoreCase(Boolean value) {
                this.ignoreCase = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;element name="mapping-config">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="negativePoints" use="required">
     *                   &lt;simpleType>
     *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                       &lt;minInclusive value="0"/>
     *                     &lt;/restriction>
     *                   &lt;/simpleType>
     *                 &lt;/attribute>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "mappingConfig",
        "mappingSubTaskDefOrChoice"
    })
    public static class MappingTaskBlock
        extends TaskBlockType
    {

        @XmlElement(name = "mapping-config", required = true)
        protected Category.MappingTaskBlock.MappingConfig mappingConfig;
        @XmlElements({
            @XmlElement(name = "choice", type = Category.MappingTaskBlock.Choice.class),
            @XmlElement(name = "mappingSubTaskDef", type = MappingSubTaskDef.class)
        })
        protected List<Object> mappingSubTaskDefOrChoice;

        /**
         * Gets the value of the mappingConfig property.
         * 
         * @return
         *     possible object is
         *     {@link Category.MappingTaskBlock.MappingConfig }
         *     
         */
        public Category.MappingTaskBlock.MappingConfig getMappingConfig() {
            return mappingConfig;
        }

        /**
         * Sets the value of the mappingConfig property.
         * 
         * @param value
         *     allowed object is
         *     {@link Category.MappingTaskBlock.MappingConfig }
         *     
         */
        public void setMappingConfig(Category.MappingTaskBlock.MappingConfig value) {
            this.mappingConfig = value;
        }

        /**
         * Gets the value of the mappingSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the mappingSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getMappingSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Category.MappingTaskBlock.Choice }
         * {@link MappingSubTaskDef }
         * 
         * 
         */
        public List<Object> getMappingSubTaskDefOrChoice() {
            if (mappingSubTaskDefOrChoice == null) {
                mappingSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.mappingSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mappingSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "mappingSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<MappingSubTaskDef> mappingSubTaskDef;

            /**
             * Gets the value of the mappingSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the mappingSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getMappingSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link MappingSubTaskDef }
             * 
             * 
             */
            public List<MappingSubTaskDef> getMappingSubTaskDef() {
                if (mappingSubTaskDef == null) {
                    mappingSubTaskDef = new ArrayList<MappingSubTaskDef>();
                }
                return this.mappingSubTaskDef;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="negativePoints" use="required">
         *         &lt;simpleType>
         *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *             &lt;minInclusive value="0"/>
         *           &lt;/restriction>
         *         &lt;/simpleType>
         *       &lt;/attribute>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class MappingConfig {

            @XmlAttribute(required = true)
            protected float negativePoints;

            /**
             * Gets the value of the negativePoints property.
             * 
             */
            public float getNegativePoints() {
                return negativePoints;
            }

            /**
             * Sets the value of the negativePoints property.
             * 
             */
            public void setNegativePoints(float value) {
                this.negativePoints = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;element name="mc-config">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;choice>
     *                   &lt;element name="regular">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="negativePoints">
     *                               &lt;simpleType>
     *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                   &lt;minInclusive value="0"/>
     *                                 &lt;/restriction>
     *                               &lt;/simpleType>
     *                             &lt;/element>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="different">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="correctAnswerNegativePoints">
     *                               &lt;simpleType>
     *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                   &lt;minInclusive value="0"/>
     *                                 &lt;/restriction>
     *                               &lt;/simpleType>
     *                             &lt;/element>
     *                             &lt;element name="incorrectAnswerNegativePoints">
     *                               &lt;simpleType>
     *                                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
     *                                   &lt;minInclusive value="0"/>
     *                                 &lt;/restriction>
     *                               &lt;/simpleType>
     *                             &lt;/element>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/choice>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "mcConfig",
        "mcSubTaskDefOrChoice"
    })
    public static class McTaskBlock
        extends TaskBlockType
    {

        @XmlElement(name = "mc-config", required = true)
        protected Category.McTaskBlock.McConfig mcConfig;
        @XmlElements({
            @XmlElement(name = "choice", type = Category.McTaskBlock.Choice.class),
            @XmlElement(name = "mcSubTaskDef", type = McSubTaskDef.class)
        })
        protected List<Object> mcSubTaskDefOrChoice;

        /**
         * Gets the value of the mcConfig property.
         * 
         * @return
         *     possible object is
         *     {@link Category.McTaskBlock.McConfig }
         *     
         */
        public Category.McTaskBlock.McConfig getMcConfig() {
            return mcConfig;
        }

        /**
         * Sets the value of the mcConfig property.
         * 
         * @param value
         *     allowed object is
         *     {@link Category.McTaskBlock.McConfig }
         *     
         */
        public void setMcConfig(Category.McTaskBlock.McConfig value) {
            this.mcConfig = value;
        }

        /**
         * Gets the value of the mcSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the mcSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getMcSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Category.McTaskBlock.Choice }
         * {@link McSubTaskDef }
         * 
         * 
         */
        public List<Object> getMcSubTaskDefOrChoice() {
            if (mcSubTaskDefOrChoice == null) {
                mcSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.mcSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}mcSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "mcSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<McSubTaskDef> mcSubTaskDef;

            /**
             * Gets the value of the mcSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the mcSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getMcSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link McSubTaskDef }
             * 
             * 
             */
            public List<McSubTaskDef> getMcSubTaskDef() {
                if (mcSubTaskDef == null) {
                    mcSubTaskDef = new ArrayList<McSubTaskDef>();
                }
                return this.mcSubTaskDef;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice>
         *         &lt;element name="regular">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="negativePoints">
         *                     &lt;simpleType>
         *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                         &lt;minInclusive value="0"/>
         *                       &lt;/restriction>
         *                     &lt;/simpleType>
         *                   &lt;/element>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="different">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="correctAnswerNegativePoints">
         *                     &lt;simpleType>
         *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                         &lt;minInclusive value="0"/>
         *                       &lt;/restriction>
         *                     &lt;/simpleType>
         *                   &lt;/element>
         *                   &lt;element name="incorrectAnswerNegativePoints">
         *                     &lt;simpleType>
         *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
         *                         &lt;minInclusive value="0"/>
         *                       &lt;/restriction>
         *                     &lt;/simpleType>
         *                   &lt;/element>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/choice>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "regular",
            "different"
        })
        public static class McConfig {

            protected Category.McTaskBlock.McConfig.Regular regular;
            protected Category.McTaskBlock.McConfig.Different different;

            /**
             * Gets the value of the regular property.
             * 
             * @return
             *     possible object is
             *     {@link Category.McTaskBlock.McConfig.Regular }
             *     
             */
            public Category.McTaskBlock.McConfig.Regular getRegular() {
                return regular;
            }

            /**
             * Sets the value of the regular property.
             * 
             * @param value
             *     allowed object is
             *     {@link Category.McTaskBlock.McConfig.Regular }
             *     
             */
            public void setRegular(Category.McTaskBlock.McConfig.Regular value) {
                this.regular = value;
            }

            /**
             * Gets the value of the different property.
             * 
             * @return
             *     possible object is
             *     {@link Category.McTaskBlock.McConfig.Different }
             *     
             */
            public Category.McTaskBlock.McConfig.Different getDifferent() {
                return different;
            }

            /**
             * Sets the value of the different property.
             * 
             * @param value
             *     allowed object is
             *     {@link Category.McTaskBlock.McConfig.Different }
             *     
             */
            public void setDifferent(Category.McTaskBlock.McConfig.Different value) {
                this.different = value;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="correctAnswerNegativePoints">
             *           &lt;simpleType>
             *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *               &lt;minInclusive value="0"/>
             *             &lt;/restriction>
             *           &lt;/simpleType>
             *         &lt;/element>
             *         &lt;element name="incorrectAnswerNegativePoints">
             *           &lt;simpleType>
             *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *               &lt;minInclusive value="0"/>
             *             &lt;/restriction>
             *           &lt;/simpleType>
             *         &lt;/element>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "correctAnswerNegativePoints",
                "incorrectAnswerNegativePoints"
            })
            public static class Different {

                protected float correctAnswerNegativePoints;
                protected float incorrectAnswerNegativePoints;

                /**
                 * Gets the value of the correctAnswerNegativePoints property.
                 * 
                 */
                public float getCorrectAnswerNegativePoints() {
                    return correctAnswerNegativePoints;
                }

                /**
                 * Sets the value of the correctAnswerNegativePoints property.
                 * 
                 */
                public void setCorrectAnswerNegativePoints(float value) {
                    this.correctAnswerNegativePoints = value;
                }

                /**
                 * Gets the value of the incorrectAnswerNegativePoints property.
                 * 
                 */
                public float getIncorrectAnswerNegativePoints() {
                    return incorrectAnswerNegativePoints;
                }

                /**
                 * Sets the value of the incorrectAnswerNegativePoints property.
                 * 
                 */
                public void setIncorrectAnswerNegativePoints(float value) {
                    this.incorrectAnswerNegativePoints = value;
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="negativePoints">
             *           &lt;simpleType>
             *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}float">
             *               &lt;minInclusive value="0"/>
             *             &lt;/restriction>
             *           &lt;/simpleType>
             *         &lt;/element>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "negativePoints"
            })
            public static class Regular {

                protected float negativePoints;

                /**
                 * Gets the value of the negativePoints property.
                 * 
                 */
                public float getNegativePoints() {
                    return negativePoints;
                }

                /**
                 * Sets the value of the negativePoints property.
                 * 
                 */
                public void setNegativePoints(float value) {
                    this.negativePoints = value;
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "paintSubTaskDefOrChoice"
    })
    public static class PaintTaskBlock
        extends TaskBlockType
    {

        @XmlElements({
            @XmlElement(name = "paintSubTaskDef", type = PaintSubTaskDef.class),
            @XmlElement(name = "choice", type = Category.PaintTaskBlock.Choice.class)
        })
        protected List<Object> paintSubTaskDefOrChoice;

        /**
         * Gets the value of the paintSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the paintSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getPaintSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link PaintSubTaskDef }
         * {@link Category.PaintTaskBlock.Choice }
         * 
         * 
         */
        public List<Object> getPaintSubTaskDefOrChoice() {
            if (paintSubTaskDefOrChoice == null) {
                paintSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.paintSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}paintSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "paintSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<PaintSubTaskDef> paintSubTaskDef;

            /**
             * Gets the value of the paintSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the paintSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getPaintSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link PaintSubTaskDef }
             * 
             * 
             */
            public List<PaintSubTaskDef> getPaintSubTaskDef() {
                if (paintSubTaskDef == null) {
                    paintSubTaskDef = new ArrayList<PaintSubTaskDef>();
                }
                return this.paintSubTaskDef;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}TaskBlockType">
     *       &lt;sequence>
     *         &lt;choice maxOccurs="unbounded">
     *           &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef"/>
     *           &lt;element name="choice">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;sequence>
     *                     &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
     *                   &lt;/sequence>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/choice>
     *       &lt;/sequence>
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "textSubTaskDefOrChoice"
    })
    public static class TextTaskBlock
        extends TaskBlockType
    {

        @XmlElements({
            @XmlElement(name = "choice", type = Category.TextTaskBlock.Choice.class),
            @XmlElement(name = "textSubTaskDef", type = TextSubTaskDef.class)
        })
        protected List<Object> textSubTaskDefOrChoice;

        /**
         * Gets the value of the textSubTaskDefOrChoice property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the textSubTaskDefOrChoice property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getTextSubTaskDefOrChoice().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Category.TextTaskBlock.Choice }
         * {@link TextSubTaskDef }
         * 
         * 
         */
        public List<Object> getTextSubTaskDefOrChoice() {
            if (textSubTaskDefOrChoice == null) {
                textSubTaskDefOrChoice = new ArrayList<Object>();
            }
            return this.textSubTaskDefOrChoice;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element ref="{http://complex.taskmodel.thorstenberger.de/complexTaskDef}textSubTaskDef" maxOccurs="unbounded"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "textSubTaskDef"
        })
        public static class Choice {

            @XmlElement(required = true)
            protected List<TextSubTaskDef> textSubTaskDef;

            /**
             * Gets the value of the textSubTaskDef property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the textSubTaskDef property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getTextSubTaskDef().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link TextSubTaskDef }
             * 
             * 
             */
            public List<TextSubTaskDef> getTextSubTaskDef() {
                if (textSubTaskDef == null) {
                    textSubTaskDef = new ArrayList<TextSubTaskDef>();
                }
                return this.textSubTaskDef;
            }

        }

    }

}
